/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Shop, ShopInterface } from "../../contracts/Shop";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "ItemAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "ItemPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "ItemRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "ItemUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "getItem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listPointer",
            type: "uint256",
          },
        ],
        internalType: "struct Shop.Item",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getItemCount",
    outputs: [
      {
        internalType: "uint256",
        name: "itemCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getItems",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "isEntity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "itemContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "itemList",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "itemStructs",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listPointer",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_itemPrice",
        type: "uint256",
      },
    ],
    name: "list",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "purchase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_itemContractAddress",
        type: "address",
      },
    ],
    name: "setItemContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasuryContractAddress",
        type: "address",
      },
    ],
    name: "setTreasuryContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_itemPrice",
        type: "uint256",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610cf38061007e6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806350fd7367116100a25780638da5cb5b116100715780638da5cb5b14610262578063a712043314610273578063c10250a014610286578063d7a42b54146102c2578063f2fde38b146102e557600080fd5b806350fd73671461022c57806370876c981461023f578063715018a6146102525780637749cf231461025a57600080fd5b80633129e773116100de5780633129e7731461017b5780633d4d3600146101e2578063410d59cc146102035780634cc822151461021957600080fd5b806318da0011146101105780631ed65110146101405780632fb565e8146101555780633089f68f14610168575b600080fd5b600154610123906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61015361014e366004610b12565b6102f8565b005b610153610163366004610b3b565b61034d565b600254610123906001600160a01b031681565b6101c7610189366004610b5d565b604080518082019091526000808252602082015250600090815260036020908152604091829020825180840190935280548352600101549082015290565b60408051825181526020928301519281019290925201610137565b6101f56101f0366004610b5d565b610417565b604051908152602001610137565b61020b610438565b604051610137929190610bb1565b610153610227366004610b5d565b61056b565b61015361023a366004610b3b565b6106cf565b61015361024d366004610b3b565b6107e3565b610153610946565b6004546101f5565b6000546001600160a01b0316610123565b610153610281366004610b12565b61097c565b6102ad610294366004610b5d565b6003602052600090815260409020805460019091015482565b60408051928352602083019190915201610137565b6102d56102d0366004610b5d565b6109c8565b6040519015158152602001610137565b6101536102f3366004610b12565b610a14565b6000546001600160a01b0316331461032b5760405162461bcd60e51b815260040161032290610bdf565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103775760405162461bcd60e51b815260040161032290610bdf565b610380826109c8565b6103bd5760405162461bcd60e51b815260206004820152600e60248201526d125d195b481b9bdd08199bdd5b9960921b6044820152606401610322565b600082815260036020908152604091829020839055815184815290810183905242918101919091527fe2c5373cce601c06f5dba3359950780f4af385925b22bf61f04c1eb60850e797906060015b60405180910390a15050565b6004818154811061042757600080fd5b600091825260209091200154905081565b606080600060048054905067ffffffffffffffff81111561045b5761045b610c14565b604051908082528060200260200182016040528015610484578160200160208202803683370190505b5060045490915060009067ffffffffffffffff8111156104a6576104a6610c14565b6040519080825280602002602001820160405280156104cf578160200160208202803683370190505b50905060005b60045481101561056157808382815181106104f2576104f2610c2a565b602002602001018181525050600360006004838154811061051557610515610c2a565b906000526020600020015481526020019081526020016000206000015482828151811061054457610544610c2a565b60209081029190910101528061055981610c56565b9150506104d5565b5090939092509050565b6000546001600160a01b031633146105955760405162461bcd60e51b815260040161032290610bdf565b61059e816109c8565b6105db5760405162461bcd60e51b815260206004820152600e60248201526d125d195b481b9bdd08199bdd5b9960921b6044820152606401610322565b6000818152600360205260409020600190810154600454909110801561060f575060045461060b90600190610c71565b8114155b1561065857600480546000919061062890600190610c71565b8154811061063857610638610c2a565b600091825260208083209091015482526003905260409020600101829055505b600480548061066957610669610c88565b60008281526020808220600019908401810183905590920190925583825260038152604080832083815560010192909255815184815242918101919091527ff6b7785072084000d80554abaf4d438ec9bce827d71b6ac74a0c6d24843770dc910161040b565b6000546001600160a01b031633146106f95760405162461bcd60e51b815260040161032290610bdf565b610702826109c8565b156107455760405162461bcd60e51b81526020600482015260136024820152724974656d20616c72656164792065786973747360681b6044820152606401610322565b604080518082018252828152600480546020808401918252600087815260038252858120945185559151600194850155825493840183559190527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b909101849055815184815290810183905242918101919091527f89c7e27f6c541c27162118063d2f8cfa86e3081872ec9d9559d3ed1c2b5cc9899060600161040b565b60408051808201825260008082526020918201819052848152600382528281208351808501909452805480855260019091015492840192909252906108289084610aaf565b60015460405163cabdae7b60e01b8152336004820152602481018390529192506001600160a01b03169063cabdae7b90604401600060405180830381600087803b15801561087557600080fd5b505af1158015610889573d6000803e3d6000fd5b5050600254604051630ab714fb60e11b815233600482015260248101889052604481018790526001600160a01b03909116925063156e29f69150606401600060405180830381600087803b1580156108e057600080fd5b505af11580156108f4573d6000803e3d6000fd5b505060408051338152602081018890529081018690524260608201527f2ff487d8fb1812f5d8a4602a340c48ce2d129f0ba25d788a2796fcdbcff930f69250608001905060405180910390a150505050565b6000546001600160a01b031633146109705760405162461bcd60e51b815260040161032290610bdf565b61097a6000610ac2565b565b6000546001600160a01b031633146109a65760405162461bcd60e51b815260040161032290610bdf565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6004546000906109da57506000919050565b600082815260036020526040902060010154600480548492908110610a0157610a01610c2a565b9060005260206000200154149050919050565b6000546001600160a01b03163314610a3e5760405162461bcd60e51b815260040161032290610bdf565b6001600160a01b038116610aa35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610322565b610aac81610ac2565b50565b6000610abb8284610c9e565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610b2457600080fd5b81356001600160a01b0381168114610abb57600080fd5b60008060408385031215610b4e57600080fd5b50508035926020909101359150565b600060208284031215610b6f57600080fd5b5035919050565b600081518084526020808501945080840160005b83811015610ba657815187529582019590820190600101610b8a565b509495945050505050565b604081526000610bc46040830185610b76565b8281036020840152610bd68185610b76565b95945050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610c6a57610c6a610c40565b5060010190565b600082821015610c8357610c83610c40565b500390565b634e487b7160e01b600052603160045260246000fd5b6000816000190483118215151615610cb857610cb8610c40565b50029056fea2646970667358221220899d6c63dfbd1ac9b15b5069bd8b25c8e9450d2cef608aadca319f83d5ad47a464736f6c63430008090033";

type ShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shop__factory extends ContractFactory {
  constructor(...args: ShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Shop> {
    return super.deploy(overrides || {}) as Promise<Shop>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Shop {
    return super.attach(address) as Shop;
  }
  override connect(signer: Signer): Shop__factory {
    return super.connect(signer) as Shop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopInterface {
    return new utils.Interface(_abi) as ShopInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shop {
    return new Contract(address, _abi, signerOrProvider) as Shop;
  }
}
