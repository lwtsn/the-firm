/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ItemBase,
  ItemBaseInterface,
} from "../../../contracts/item/ItemBase";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "ItemMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "createNewItem",
    outputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextItemId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "viewItem",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct ItemBase.Item",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006004553480156200001657600080fd5b5060405180606001604052806027815260200162001d9b602791396200003c816200004e565b50620000483362000067565b6200019c565b805162000063906002906020840190620000b9565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000c7906200015f565b90600052602060002090601f016020900481019282620000eb576000855562000136565b82601f106200010657805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013657825182559160200191906001019062000119565b506200014492915062000148565b5090565b5b8082111562000144576000815560010162000149565b600181811c908216806200017457607f821691505b602082108114156200019657634e487b7160e01b600052602260045260246000fd5b50919050565b611bef80620001ac6000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80636f7b015511610097578063e985e9c511610066578063e985e9c514610227578063f242432a14610263578063f2fde38b14610276578063fa0284ce1461028957600080fd5b80636f7b0155146101d1578063715018a6146101f15780638da5cb5b146101f9578063a22cb4651461021457600080fd5b8063224e3cd8116100d3578063224e3cd8146101825780632eb2c2d6146101955780634e1273f4146101a85780636a868974146101c857600080fd5b8062fdd58e1461010457806301ffc9a71461012a5780630e89341c1461014d578063156e29f61461016d575b600080fd5b6101176101123660046112fb565b61029c565b6040519081526020015b60405180910390f35b61013d61013836600461133b565b610333565b6040519015158152602001610121565b61016061015b36600461135f565b610385565b60405161012191906113c5565b61018061017b3660046113d8565b610419565b005b6101176101903660046114ac565b610481565b6101806101a33660046115b2565b610508565b6101bb6101b636600461165c565b61059f565b6040516101219190611762565b61011760045481565b6101e46101df36600461135f565b6106c9565b6040516101219190611775565b61018061078f565b6003546040516001600160a01b039091168152602001610121565b610180610222366004611790565b6107c5565b61013d6102353660046117cc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101806102713660046117ff565b6107d4565b610180610284366004611864565b61085b565b6101806102973660046113d8565b6108f6565b60006001600160a01b03831661030d5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061036457506001600160e01b031982166303a24d0760e21b145b8061037f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546103949061187f565b80601f01602080910402602001604051908101604052809291908181526020018280546103c09061187f565b801561040d5780601f106103e25761010080835404028352916020019161040d565b820191906000526020600020905b8154815290600101906020018083116103f057829003601f168201915b50505050509050919050565b604080516001600160a01b038516815260208101839052428183015290517fd9be9c40c7e99dfc974fa3fe3b790af02afd2939b5dedfccb1ba12933eb27a8e9181900360600190a161047c83838360405180602001604052806000815250610901565b505050565b6003546000906001600160a01b031633146104ae5760405162461bcd60e51b8152600401610304906118ba565b60408051602080820183528482526004546000908152600582529290922081518051929391926104e1928492019061124b565b509050506001600460008282546104f89190611905565b909155505060045490505b919050565b6001600160a01b03851633148061052457506105248533610235565b61058b5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610304565b6105988585858585610a15565b5050505050565b606081518351146106045760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610304565b6000835167ffffffffffffffff8111156106205761062061140b565b604051908082528060200260200182016040528015610649578160200160208202803683370190505b50905060005b84518110156106c15761069485828151811061066d5761066d61191d565b60200260200101518583815181106106875761068761191d565b602002602001015161029c565b8282815181106106a6576106a661191d565b60209081029190910101526106ba81611933565b905061064f565b509392505050565b604080516020810190915260608152600560008381526020019081526020016000206040518060200160405290816000820180546107069061187f565b80601f01602080910402602001604051908101604052809291908181526020018280546107329061187f565b801561077f5780601f106107545761010080835404028352916020019161077f565b820191906000526020600020905b81548152906001019060200180831161076257829003601f168201915b5050505050815250509050919050565b6003546001600160a01b031633146107b95760405162461bcd60e51b8152600401610304906118ba565b6107c36000610bf2565b565b6107d0338383610c44565b5050565b6001600160a01b0385163314806107f057506107f08533610235565b61084e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610304565b6105988585858585610d25565b6003546001600160a01b031633146108855760405162461bcd60e51b8152600401610304906118ba565b6001600160a01b0381166108ea5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610304565b6108f381610bf2565b50565b61047c838383610e4f565b6001600160a01b0384166109615760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610304565b33600061096d85610fcb565b9050600061097a85610fcb565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906109ac908490611905565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a0c83600089898989611016565b50505050505050565b8151835114610a775760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610304565b6001600160a01b038416610a9d5760405162461bcd60e51b81526004016103049061194e565b3360005b8451811015610b84576000858281518110610abe57610abe61191d565b602002602001015190506000858381518110610adc57610adc61191d565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610b2c5760405162461bcd60e51b815260040161030490611993565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610b69908490611905565b9250508190555050505080610b7d90611933565b9050610aa1565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610bd49291906119dd565b60405180910390a4610bea818787878787611181565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610cb85760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610304565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610d4b5760405162461bcd60e51b81526004016103049061194e565b336000610d5785610fcb565b90506000610d6485610fcb565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610da75760405162461bcd60e51b815260040161030490611993565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610de4908490611905565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e44848a8a8a8a8a611016565b505050505050505050565b6001600160a01b038316610eb15760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610304565b336000610ebd84610fcb565b90506000610eca84610fcb565b60408051602080820183526000918290528882528181528282206001600160a01b038b1683529052205490915084811015610f535760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610304565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610a0c565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106110055761100561191d565b602090810291909101015292915050565b6001600160a01b0384163b15610bea5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061105a9089908990889088908890600401611a0b565b602060405180830381600087803b15801561107457600080fd5b505af19250505080156110a4575060408051601f3d908101601f191682019092526110a191810190611a50565b60015b611151576110b0611a6d565b806308c379a014156110ea57506110c5611a89565b806110d057506110ec565b8060405162461bcd60e51b815260040161030491906113c5565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610304565b6001600160e01b0319811663f23a6e6160e01b14610a0c5760405162461bcd60e51b815260040161030490611b13565b6001600160a01b0384163b15610bea5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906111c59089908990889088908890600401611b5b565b602060405180830381600087803b1580156111df57600080fd5b505af192505050801561120f575060408051601f3d908101601f1916820190925261120c91810190611a50565b60015b61121b576110b0611a6d565b6001600160e01b0319811663bc197c8160e01b14610a0c5760405162461bcd60e51b815260040161030490611b13565b8280546112579061187f565b90600052602060002090601f01602090048101928261127957600085556112bf565b82601f1061129257805160ff19168380011785556112bf565b828001600101855582156112bf579182015b828111156112bf5782518255916020019190600101906112a4565b506112cb9291506112cf565b5090565b5b808211156112cb57600081556001016112d0565b80356001600160a01b038116811461050357600080fd5b6000806040838503121561130e57600080fd5b611317836112e4565b946020939093013593505050565b6001600160e01b0319811681146108f357600080fd5b60006020828403121561134d57600080fd5b813561135881611325565b9392505050565b60006020828403121561137157600080fd5b5035919050565b6000815180845260005b8181101561139e57602081850181015186830182015201611382565b818111156113b0576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006113586020830184611378565b6000806000606084860312156113ed57600080fd5b6113f6846112e4565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156114475761144761140b565b6040525050565b600067ffffffffffffffff8311156114685761146861140b565b60405161147f601f8501601f191660200182611421565b80915083815284848401111561149457600080fd5b83836020830137600060208583010152509392505050565b6000602082840312156114be57600080fd5b813567ffffffffffffffff8111156114d557600080fd5b8201601f810184136114e657600080fd5b6114f58482356020840161144e565b949350505050565b600067ffffffffffffffff8211156115175761151761140b565b5060051b60200190565b600082601f83011261153257600080fd5b8135602061153f826114fd565b60405161154c8282611421565b83815260059390931b850182019282810191508684111561156c57600080fd5b8286015b848110156115875780358352918301918301611570565b509695505050505050565b600082601f8301126115a357600080fd5b6113588383356020850161144e565b600080600080600060a086880312156115ca57600080fd5b6115d3866112e4565b94506115e1602087016112e4565b9350604086013567ffffffffffffffff808211156115fe57600080fd5b61160a89838a01611521565b9450606088013591508082111561162057600080fd5b61162c89838a01611521565b9350608088013591508082111561164257600080fd5b5061164f88828901611592565b9150509295509295909350565b6000806040838503121561166f57600080fd5b823567ffffffffffffffff8082111561168757600080fd5b818501915085601f83011261169b57600080fd5b813560206116a8826114fd565b6040516116b58282611421565b83815260059390931b85018201928281019150898411156116d557600080fd5b948201945b838610156116fa576116eb866112e4565b825294820194908201906116da565b9650508601359250508082111561171057600080fd5b5061171d85828601611521565b9150509250929050565b600081518084526020808501945080840160005b838110156117575781518752958201959082019060010161173b565b509495945050505050565b6020815260006113586020830184611727565b60208152600082516020808401526114f56040840182611378565b600080604083850312156117a357600080fd5b6117ac836112e4565b9150602083013580151581146117c157600080fd5b809150509250929050565b600080604083850312156117df57600080fd5b6117e8836112e4565b91506117f6602084016112e4565b90509250929050565b600080600080600060a0868803121561181757600080fd5b611820866112e4565b945061182e602087016112e4565b93506040860135925060608601359150608086013567ffffffffffffffff81111561185857600080fd5b61164f88828901611592565b60006020828403121561187657600080fd5b611358826112e4565b600181811c9082168061189357607f821691505b602082108114156118b457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611918576119186118ef565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611947576119476118ef565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006119f06040830185611727565b8281036020840152611a028185611727565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611a4590830184611378565b979650505050505050565b600060208284031215611a6257600080fd5b815161135881611325565b600060033d1115611a865760046000803e5060005160e01c5b90565b600060443d1015611a975790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611ac757505050505090565b8285019150815181811115611adf5750505050505090565b843d8701016020828501011115611af95750505050505090565b611b0860208286010187611421565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611b8790830186611727565b8281036060840152611b998186611727565b90508281036080840152611bad8185611378565b9897505050505050505056fea2646970667358221220e951173479c43eb4bc8ecec42d2bc5bef25b6f179cc086432211f9b9bf41306864736f6c6343000809003368747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e";

type ItemBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ItemBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ItemBase__factory extends ContractFactory {
  constructor(...args: ItemBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ItemBase> {
    return super.deploy(overrides || {}) as Promise<ItemBase>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ItemBase {
    return super.attach(address) as ItemBase;
  }
  override connect(signer: Signer): ItemBase__factory {
    return super.connect(signer) as ItemBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ItemBaseInterface {
    return new utils.Interface(_abi) as ItemBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ItemBase {
    return new Contract(address, _abi, signerOrProvider) as ItemBase;
  }
}
