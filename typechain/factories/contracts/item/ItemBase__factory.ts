/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ItemBase,
  ItemBaseInterface,
} from "../../../contracts/item/ItemBase";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "ItemMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createNewItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006004553480156200001657600080fd5b5060405180606001604052806027815260200162001b24602791396200003c816200004e565b50620000483362000067565b6200019c565b805162000063906002906020840190620000b9565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000c7906200015f565b90600052602060002090601f016020900481019282620000eb576000855562000136565b82601f106200010657805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013657825182559160200191906001019062000119565b506200014492915062000148565b5090565b5b8082111562000144576000815560010162000149565b600181811c908216806200017457607f821691505b602082108114156200019657634e487b7160e01b600052602260045260246000fd5b50919050565b61197880620001ac6000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c80638da5cb5b1161008c578063e985e9c511610066578063e985e9c5146101dd578063f242432a14610219578063f2fde38b1461022c578063fa0284ce1461023f57600080fd5b80638da5cb5b146101a7578063a22cb465146101c2578063a4d38984146101d557600080fd5b8063156e29f6116100c8578063156e29f6146101575780632eb2c2d61461016c5780634e1273f41461017f578063715018a61461019f57600080fd5b8062fdd58e146100ee57806301ffc9a7146101145780630e89341c14610137575b600080fd5b6101016100fc3660046110fa565b610252565b6040519081526020015b60405180910390f35b61012761012236600461113a565b6102e9565b604051901515815260200161010b565b61014a61014536600461115e565b61033b565b60405161010b91906111c4565b61016a6101653660046111d7565b6103cf565b005b61016a61017a366004611356565b610437565b61019261018d366004611400565b6104ce565b60405161010b9190611506565b61016a6105f8565b6003546040516001600160a01b03909116815260200161010b565b61016a6101d0366004611519565b61062e565b61016a61063d565b6101276101eb366004611555565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61016a610227366004611588565b610667565b61016a61023a3660046115ed565b6106ee565b61016a61024d3660046111d7565b610789565b60006001600160a01b0383166102c35760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061031a57506001600160e01b031982166303a24d0760e21b145b8061033557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461034a90611608565b80601f016020809104026020016040519081016040528092919081815260200182805461037690611608565b80156103c35780601f10610398576101008083540402835291602001916103c3565b820191906000526020600020905b8154815290600101906020018083116103a657829003601f168201915b50505050509050919050565b604080516001600160a01b038516815260208101839052428183015290517fd9be9c40c7e99dfc974fa3fe3b790af02afd2939b5dedfccb1ba12933eb27a8e9181900360600190a161043283838360405180602001604052806000815250610794565b505050565b6001600160a01b038516331480610453575061045385336101eb565b6104ba5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016102ba565b6104c785858585856108a8565b5050505050565b606081518351146105335760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102ba565b6000835167ffffffffffffffff81111561054f5761054f61120a565b604051908082528060200260200182016040528015610578578160200160208202803683370190505b50905060005b84518110156105f0576105c385828151811061059c5761059c611643565b60200260200101518583815181106105b6576105b6611643565b6020026020010151610252565b8282815181106105d5576105d5611643565b60209081029190910101526105e98161166f565b905061057e565b509392505050565b6003546001600160a01b031633146106225760405162461bcd60e51b81526004016102ba9061168a565b61062c6000610a85565b565b610639338383610ad7565b5050565b6003546001600160a01b0316331461062c5760405162461bcd60e51b81526004016102ba9061168a565b6001600160a01b038516331480610683575061068385336101eb565b6106e15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016102ba565b6104c78585858585610bb8565b6003546001600160a01b031633146107185760405162461bcd60e51b81526004016102ba9061168a565b6001600160a01b03811661077d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ba565b61078681610a85565b50565b610432838383610ce2565b6001600160a01b0384166107f45760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102ba565b33600061080085610e5e565b9050600061080d85610e5e565b90506000868152602081815260408083206001600160a01b038b1684529091528120805487929061083f9084906116bf565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461089f83600089898989610ea9565b50505050505050565b815183511461090a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102ba565b6001600160a01b0384166109305760405162461bcd60e51b81526004016102ba906116d7565b3360005b8451811015610a1757600085828151811061095157610951611643565b60200260200101519050600085838151811061096f5761096f611643565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109bf5760405162461bcd60e51b81526004016102ba9061171c565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906109fc9084906116bf565b9250508190555050505080610a109061166f565b9050610934565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a67929190611766565b60405180910390a4610a7d818787878787611014565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610b4b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102ba565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610bde5760405162461bcd60e51b81526004016102ba906116d7565b336000610bea85610e5e565b90506000610bf785610e5e565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610c3a5760405162461bcd60e51b81526004016102ba9061171c565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610c779084906116bf565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610cd7848a8a8a8a8a610ea9565b505050505050505050565b6001600160a01b038316610d445760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016102ba565b336000610d5084610e5e565b90506000610d5d84610e5e565b60408051602080820183526000918290528882528181528282206001600160a01b038b1683529052205490915084811015610de65760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016102ba565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a460408051602081019091526000905261089f565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610e9857610e98611643565b602090810291909101015292915050565b6001600160a01b0384163b15610a7d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610eed9089908990889088908890600401611794565b602060405180830381600087803b158015610f0757600080fd5b505af1925050508015610f37575060408051601f3d908101601f19168201909252610f34918101906117d9565b60015b610fe457610f436117f6565b806308c379a01415610f7d5750610f58611812565b80610f635750610f7f565b8060405162461bcd60e51b81526004016102ba91906111c4565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102ba565b6001600160e01b0319811663f23a6e6160e01b1461089f5760405162461bcd60e51b81526004016102ba9061189c565b6001600160a01b0384163b15610a7d5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061105890899089908890889088906004016118e4565b602060405180830381600087803b15801561107257600080fd5b505af19250505080156110a2575060408051601f3d908101601f1916820190925261109f918101906117d9565b60015b6110ae57610f436117f6565b6001600160e01b0319811663bc197c8160e01b1461089f5760405162461bcd60e51b81526004016102ba9061189c565b80356001600160a01b03811681146110f557600080fd5b919050565b6000806040838503121561110d57600080fd5b611116836110de565b946020939093013593505050565b6001600160e01b03198116811461078657600080fd5b60006020828403121561114c57600080fd5b813561115781611124565b9392505050565b60006020828403121561117057600080fd5b5035919050565b6000815180845260005b8181101561119d57602081850181015186830182015201611181565b818111156111af576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006111576020830184611177565b6000806000606084860312156111ec57600080fd5b6111f5846110de565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156112465761124661120a565b6040525050565b600067ffffffffffffffff8211156112675761126761120a565b5060051b60200190565b600082601f83011261128257600080fd5b8135602061128f8261124d565b60405161129c8282611220565b83815260059390931b85018201928281019150868411156112bc57600080fd5b8286015b848110156112d757803583529183019183016112c0565b509695505050505050565b600082601f8301126112f357600080fd5b813567ffffffffffffffff81111561130d5761130d61120a565b604051611324601f8301601f191660200182611220565b81815284602083860101111561133957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561136e57600080fd5b611377866110de565b9450611385602087016110de565b9350604086013567ffffffffffffffff808211156113a257600080fd5b6113ae89838a01611271565b945060608801359150808211156113c457600080fd5b6113d089838a01611271565b935060808801359150808211156113e657600080fd5b506113f3888289016112e2565b9150509295509295909350565b6000806040838503121561141357600080fd5b823567ffffffffffffffff8082111561142b57600080fd5b818501915085601f83011261143f57600080fd5b8135602061144c8261124d565b6040516114598282611220565b83815260059390931b850182019282810191508984111561147957600080fd5b948201945b8386101561149e5761148f866110de565b8252948201949082019061147e565b965050860135925050808211156114b457600080fd5b506114c185828601611271565b9150509250929050565b600081518084526020808501945080840160005b838110156114fb578151875295820195908201906001016114df565b509495945050505050565b60208152600061115760208301846114cb565b6000806040838503121561152c57600080fd5b611535836110de565b91506020830135801515811461154a57600080fd5b809150509250929050565b6000806040838503121561156857600080fd5b611571836110de565b915061157f602084016110de565b90509250929050565b600080600080600060a086880312156115a057600080fd5b6115a9866110de565b94506115b7602087016110de565b93506040860135925060608601359150608086013567ffffffffffffffff8111156115e157600080fd5b6113f3888289016112e2565b6000602082840312156115ff57600080fd5b611157826110de565b600181811c9082168061161c57607f821691505b6020821081141561163d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561168357611683611659565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156116d2576116d2611659565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60408152600061177960408301856114cb565b828103602084015261178b81856114cb565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906117ce90830184611177565b979650505050505050565b6000602082840312156117eb57600080fd5b815161115781611124565b600060033d111561180f5760046000803e5060005160e01c5b90565b600060443d10156118205790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561185057505050505090565b82850191508151818111156118685750505050505090565b843d87010160208285010111156118825750505050505090565b61189160208286010187611220565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611910908301866114cb565b828103606084015261192281866114cb565b905082810360808401526119368185611177565b9897505050505050505056fea2646970667358221220b8cfa727dc6c77c6d8b5775ede02fae36a2dc408ca67d39550d98916b656661064736f6c6343000809003368747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e";

type ItemBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ItemBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ItemBase__factory extends ContractFactory {
  constructor(...args: ItemBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ItemBase> {
    return super.deploy(overrides || {}) as Promise<ItemBase>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ItemBase {
    return super.attach(address) as ItemBase;
  }
  override connect(signer: Signer): ItemBase__factory {
    return super.connect(signer) as ItemBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ItemBaseInterface {
    return new utils.Interface(_abi) as ItemBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ItemBase {
    return new Contract(address, _abi, signerOrProvider) as ItemBase;
  }
}
