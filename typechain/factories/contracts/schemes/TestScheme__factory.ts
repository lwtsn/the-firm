/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestScheme,
  TestSchemeInterface,
} from "../../../contracts/schemes/TestScheme";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_experience",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_chanceOfSuccess",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_baseEarning",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_earningBonus",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "SchemeCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "SchemeStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
    ],
    name: "complete",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScheme",
    outputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cashContractAddress",
        type: "address",
      },
    ],
    name: "setCashContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_playerStatsAddress",
        type: "address",
      },
    ],
    name: "setPlayerStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomNumberGenerator",
        type: "address",
      },
    ],
    name: "setRandomNumberGenerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105ef3803806105ef83398101604081905261002f91610049565b600094909455600192909255600255600755600855610089565b600080600080600060a0868803121561006157600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b610557806100986000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d07f8a431161005b578063d07f8a4314610101578063dd0b281e14610131578063f0f4426014610144578063ff83298a1461017457600080fd5b80630fb5a6b41461008d57806350fc2964146100a957806393af0292146100db5780639ecb7c41146100ee575b600080fd5b61009660005481565b6040519081526020015b60405180910390f35b6100d96100b7366004610433565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b005b6100d96100e9366004610433565b61018a565b6100d96100fc366004610433565b6101a6565b6100d961010f366004610433565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6100d961013f366004610433565b610245565b6100d9610152366004610433565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b61017c61024e565b6040516100a09291906104b0565b610195816021610285565b6101a3816014806014610354565b50565b600480546001600160a01b0319166001600160a01b03838116918217835560055460405163095ea7b360e01b815291169281019290925260001960248301529063095ea7b390604401602060405180830381600087803b15801561020957600080fd5b505af115801561021d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024191906104d1565b5050565b6101a3816103ce565b6000606060005461027d60408051808201909152600b81526a5445535420534348454d4560a81b602082015290565b915091509091565b600480546040516340c10f1960e01b81523092810192909252602482018390526001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156102d257600080fd5b505af11580156102e6573d6000803e3d6000fd5b5050600554604051632913b8c560e21b81526001600160a01b03868116600483015260248201869052909116925063a44ee3149150604401600060405180830381600087803b15801561033857600080fd5b505af115801561034c573d6000803e3d6000fd5b505050505050565b60065460405163a4b4eba560e01b81526001600160a01b0386811660048301526024820186905260448201859052606482018490529091169063a4b4eba590608401600060405180830381600087803b1580156103b057600080fd5b505af11580156103c4573d6000803e3d6000fd5b5050505050505050565b7f770ec39a627afda6de8b8d68f80104e297a2cd74a7544ee4f52b4912705c260861041760408051808201909152600b81526a5445535420534348454d4560a81b602082015290565b8242604051610428939291906104f3565b60405180910390a150565b60006020828403121561044557600080fd5b81356001600160a01b038116811461045c57600080fd5b9392505050565b6000815180845260005b818110156104895760208185018101518683018201520161046d565b8181111561049b576000602083870101525b50601f01601f19169290920160200192915050565b8281526040602082015260006104c96040830184610463565b949350505050565b6000602082840312156104e357600080fd5b8151801515811461045c57600080fd5b6060815260006105066060830186610463565b6001600160a01b03949094166020830152506040015291905056fea2646970667358221220c00701da68e626da8493d1ed85798e47ab294cc5e8f82e6e2c7ff5246df4009264736f6c63430008090033";

type TestSchemeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestSchemeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestScheme__factory extends ContractFactory {
  constructor(...args: TestSchemeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _duration: BigNumberish,
    _experience: BigNumberish,
    _chanceOfSuccess: BigNumberish,
    _baseEarning: BigNumberish,
    _earningBonus: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestScheme> {
    return super.deploy(
      _duration,
      _experience,
      _chanceOfSuccess,
      _baseEarning,
      _earningBonus,
      overrides || {}
    ) as Promise<TestScheme>;
  }
  override getDeployTransaction(
    _duration: BigNumberish,
    _experience: BigNumberish,
    _chanceOfSuccess: BigNumberish,
    _baseEarning: BigNumberish,
    _earningBonus: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _duration,
      _experience,
      _chanceOfSuccess,
      _baseEarning,
      _earningBonus,
      overrides || {}
    );
  }
  override attach(address: string): TestScheme {
    return super.attach(address) as TestScheme;
  }
  override connect(signer: Signer): TestScheme__factory {
    return super.connect(signer) as TestScheme__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestSchemeInterface {
    return new utils.Interface(_abi) as TestSchemeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestScheme {
    return new Contract(address, _abi, signerOrProvider) as TestScheme;
  }
}
