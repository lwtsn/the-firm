/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Random, RandomInterface } from "../../../contracts/utils/Random";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "upper",
        type: "uint64",
      },
    ],
    name: "random",
    outputs: [
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600080546001600160401b03191665155575a0cf3f17905534801561002857600080fd5b50610153806100386000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631a1a799314610030575b600080fd5b61004361003e3660046100ca565b610055565b60405190815260200160405180910390f35b60008054604080514260208201524160601b6bffffffffffffffffffffffff19169181019190915260c09190911b6001600160c01b031916605482015267ffffffffffffffff831690605c016040516020818303038152906040528051906020012060001c6100c491906100fb565b92915050565b6000602082840312156100dc57600080fd5b813567ffffffffffffffff811681146100f457600080fd5b9392505050565b60008261011857634e487b7160e01b600052601260045260246000fd5b50069056fea264697066735822122092e305d4fa86f85548e74cad4c4911a892a2d687cc4e57dcc6659545036790c964736f6c63430008090033";

type RandomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Random__factory extends ContractFactory {
  constructor(...args: RandomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Random> {
    return super.deploy(overrides || {}) as Promise<Random>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Random {
    return super.attach(address) as Random;
  }
  override connect(signer: Signer): Random__factory {
    return super.connect(signer) as Random__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomInterface {
    return new utils.Interface(_abi) as RandomInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Random {
    return new Contract(address, _abi, signerOrProvider) as Random;
  }
}
